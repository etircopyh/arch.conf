# Sway config
#
# man 5 sway

### Autostart
#exec systemctl --user start redshift.service
exec dex --environment Sway --autostart --search-paths ${XDG_CONFIG_HOME:-$HOME/.config}/autostart
exec find ${XDG_CONFIG_HOME:-$HOME/.config}/autostart-scripts/*.sh 2> /dev/null | sh -
#exec mako >/tmp/mako.log 2>&1
exec_always makoctl reload
# GTK3 Settings
set $gnome-schema org.gnome.desktop.interface
exec_always {
    gsettings set $gnome-schema gtk-theme           'Breeze-Dark'
    gsettings set $gnome-schema icon-theme          'Papirus-Dark'
    gsettings set $gnome-schema font-name           'Montserrat Regular 11'
    gsettings set $gnome-schema monospace-font-name 'Go Mono 10'
}

# Import variables for systemd to be aware of them
exec dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK XDG_CURRENT_DESKTOP GNUPGHOME

### Variables
#
# Super
set $mod Mod4
# Vi-like directions keys
set $left   h
set $down   j
set $up     k
set $right  l
# Font
set $font_family SF Compact Display
set $font_size 9
set $bar_font_family Roboto 12, Font Awesome 5 Pro
#set $bar_font_size 9

# SwayWM config directory
set $swaydir ${XDG_CONFIG_HOME:-$HOME/.config}/sway

# Sway modules
set $modules $swaydir/modules

# Cursor theme
set $cursor_theme 'Bibata-Modern-Amber'

# Wallpaper
set $wallpaper "${XDG_DATA_HOME:-$HOME/.local/share}/wallpapers/nature.jpg"

# Calculator
set $calc mate-calc
# Terminal emulator
set $term foot
# Process Manager
set $process_manager $term --app-id='htop-mem' --title='Process Manager' -- htop -s PERCENT_MEM
# Dropdown terminal
set $dropdown (pgrep -a $term | grep dropdown) && \
            (swaymsg "[con_mark=dropdown] scratchpad show" || \
            swaymsg "[tiling con_mark=dropdown] move container to workspace current,move to scratchpad, scratchpad show") || \
            exec $term --app-id='dropdown' --title='Dropdown Terminal'
# Browser
set $browser firefox
# Screen recorder
#set $screencast wf-recorder -a -f ~/Screencasts/$(date +'%Y-%m-%d-%H:%M:%S_screencast').mp4
set $regioncast wf-recorder -a -g "$(slurp -c '#990000FF' -s '#2F4F4F28' -b '#00000046' -d)"

set $screencastx $SHELL $modules/wf-record.sh
#bindsym --to-code Shift+j $screencastx
# WebCam
set $webcam     ffmpeg -i /dev/video0 -frames:v 1 -ss 1 ~/Media/Photos/$(date +'%Y-%m-%d-%H:%M:%S_webcam').png

# Application launcher [bemenu]
#set $menu bemenu-run -p Run: \
#            --fn 'SF Mono 9' \
#            --tb '#282A36' --tf '#ffffff' \
#            --fb '#282A36' --ff '#ffffff' \
#            --nb '#002222' --nf '#ffff21' \
#            --hb '#ffffff' --hf '#cc2132' \
#            --sb '#000000' --sf '#ffffff' \
#            --scb '#aaccff' --scf '#000000' \

# Custom application launcher (needs fzf package)
set $launcher $term --app-id='launcher' --title='Application Launcher' -- env TERMINAL_COMMAND='foot --' sway-launcher-desktop

for_window [app_id="tofi"] floating enable, border pixel 2, sticky enable
set $menutofi exec $term --app-id=tofi -d 80 10 -- sh -c 'tofi -m drun,run,i3wm'

# Screenshot
set $regionshot     grim -g \"$(slurp -c '#990000FF' -s '#2F4F4F28' -b '#00000046' -d)" - | wl-copy | > ~/Media/Screenshots/$(date +'%Y-%m-%d-%H:%M:%S_screenshot').png
set $regionshotfile grim -g \"$(slurp -c '#990000FF' -s '#2F4F4F28' -b '#00000046' -d)" ~/Media/Screenshots/$(date +'%Y-%m-%d-%H:%M:%S_regionshot').png
set $screenshot     grim - | swappy -f -
set $screenshotfile grim ~/Media/Screenshots/$(date +'%Y-%m-%d-%H:%M:%S_screenshot').png
set $shotscreen     $SHELL $modules/screenshot.sh
set $shotregion     $SHELL $modules/regionshot.sh
set $shotwindow     $SHELL $modules/windowshot.sh

# Color picker
set $colorpick grim -g "$(slurp -p)" -t ppm - | convert - -format '%[pixel:p{0,0}]' txt:- | awk '{printf "%s ",$0}' | awk '{print substr($0,index($0,":")+2)}' | awk '{$1=""; print $4,$5}' | wl-copy -n

# Custom Bluetooth device chooser
set $BTconnect exec $term --title='Bluetooth devices' --app-id='BTconnect' -- $SHELL $modules/bluetooth-prompt.sh

# Notifications
set $notify notify-send -t 3000

# Cursor theme
seat seat0 xcursor_theme $cursor_theme 24
exec_always {
    gsettings set $gnome-schema cursor-theme $cursor_theme
}

# Options
default_orientation auto
swaynag_command swaynag -c $swaydir/swaynag
xwayland disable
default_border none
hide_edge_borders smart
#default_floating_border pixel 0
#focus_follows_mouse always

# Gaps
gaps outer 0
gaps inner 2
smart_gaps on

# Font configuration
font pango:$font_family $font_size

### Output configuration
#
# Laptop screen
output LVDS-1 {
    #resolution 1366x768@60.02Hz
    adaptive_sync on
    position      0,0
    background    $wallpaper fill
    subpixel      none
}
#
# man 5 sway-output

### Idle configuration
#
#exec swayidle -w \
#       timeout 1200    'swaylock -f -c 000000' \
#       timeout 1800    'swaymsg "output * dpms off"' \
#       resume          'swaymsg "output * dpms on"' \
#       before-sleep    'swaylock -f -c 000000'

### Input configuration
#
# Keyboard configuration
input type:keyboard {
    xkb_layout          us,ru
    xkb_model           asus_laptop
    xkb_options         grp:caps_toggle,grp:switch,altwin:menu_win
    xkb_numlock         enabled
    #repeat_delay       300
    #repeat_rate        30
}

# Mouse configuration
input type:pointer {
    accel_profile flat
    pointer_accel 0
}

# TouchPad configuration
input type:touchpad {
    events              enabled
    dwt                 enabled
    tap                 enabled
    natural_scroll      disabled
    middle_emulation    disabled
    click_method        clickfinger
    scroll_method       two_finger
    scroll_factor       0.8
}
#
# man 5 sway-input

### Colors
#
include $swaydir/colors

### Key bindings
#
# Basics:
#
# Power options
bindsym --to-code {
    $mod+Shift+z exec systemctl poweroff
    $mod+Shift+p exec systemctl reboot
    $mod+Shift+s exec systemctl suspend
}


# Bluetooth device picker
bindsym --to-code $mod+Shift+b exec $BTconnect

# Bluetooth scan
bindsym $mod+F2 exec bluetoothctl scan on

# Process manager (htop)
bindsym Ctrl+Escape exec $process_manager

# Terminal
bindsym --to-code {
    $mod+Return exec $term
    $mod+t      exec $term
    F9          exec $dropdown
}

# Kill focused window
bindsym --to-code $mod+Shift+q kill

# Start your launcher
bindsym --to-code $mod+d exec wofi --show drun --allow-images --term=$term --prompt=Run: --no-actions --insensitive --hide-scroll
#bindsym --to-code $mod+d exec $launcher

# Color picker
bindsym --to-code $mod+i exec $colorpick

# Make a screenshot
bindsym {
    #Print               exec $shotregion
    Print               exec flameshot gui --clipboard --path "$HOME/Media/Screenshots/$(date +'%Y-%m-%d-%H:%M:%S_regionshot').png"
    #Shift+Print         exec $shotscreen
    #Shift+Print         exec flameshot full --raw > "$HOME/Media/Screenshots/$(date +'%Y-%m-%d-%H:%M:%S_regionshot').png"  wl-copy -t image/png
    Shift+Print         exec flameshot full --clipboard --path "$HOME/Media/Screenshots/$(date +'%Y-%m-%d-%H:%M:%S_screenshot').png"
    $mod+Print          exec $shotwindow
}

# Record the screen
bindsym {
    $mod+Shift+m        exec $regioncast
    $mod+m              exec $screencastx
    $mod+k              exec kill -INT wf-recorder
}

floating_modifier $mod normal

# Reload the configuration file
bindsym --to-code $mod+Shift+c reload

# Exit sway (logs you out of your session)
bindsym --to-code $mod+Shift+e exec swaynag --config $swaydir/swaynag --type warning --message 'Do you really want to exit sway? This will end your session.' --button 'Yes, exit sway' 'swaymsg exit'

# Mumble push-to-talk integration
#bindsym --whole-window button9 exec dbus-send --session --type=method_call --dest=net.sourceforge.mumble.mumble / net.sourceforge.mumble.Mumble.startTalking
#bindsym --whole-window --release button9 exec dbus-send --session --type=method_call --dest=net.sourceforge.mumble.mumble / net.sourceforge.mumble.Mumble.stopTalking

#
# Moving around:
#
# Move your focus around
bindsym --to-code {
    $mod+$left  focus left
    $mod+$down  focus down
    $mod+$up    focus up
    $mod+$right focus right
# Or use $mod+[up|down|left|right]
    $mod+Left   focus left
    $mod+Down   focus down
    $mod+Up     focus up
    $mod+Right  focus right
}

# Move the focused window
bindsym --to-code {
    $mod+Shift+$left    move left
    $mod+Shift+$down    move down
    $mod+Shift+$up      move up
    $mod+Shift+$right   move right

    $mod+Shift+Left     move left
    $mod+Shift+Down     move down
    $mod+Shift+Up       move up
    $mod+Shift+Right    move right
}

#
# Workspaces:
#
# Switch to workspace
bindsym {
    $mod+1 workspace number 1
    $mod+2 workspace number 2
    $mod+3 workspace number 3
    $mod+4 workspace number 4
    $mod+5 workspace number 5
    $mod+6 workspace number 6
    $mod+7 workspace number 7
    $mod+8 workspace number 8
    $mod+9 workspace number 9
    $mod+0 workspace number 10
# Move focused container to workspace
    $mod+Shift+1 move container to workspace 1
    $mod+Shift+2 move container to workspace 2
    $mod+Shift+3 move container to workspace 3
    $mod+Shift+4 move container to workspace 4
    $mod+Shift+5 move container to workspace 5
    $mod+Shift+6 move container to workspace 6
    $mod+Shift+7 move container to workspace 7
    $mod+Shift+8 move container to workspace 8
    $mod+Shift+9 move container to workspace 9
    $mod+Shift+0 move container to workspace 10
}

#
# Layout stuff:
#
# Split focused window
bindsym --to-code {
    $mod+b splith
    $mod+v splitv
}

# Switch the current container between different layout styles
bindsym --to-code {
    $mod+s layout stacking
    $mod+w layout tabbed
    $mod+e layout toggle split
}

# Make the current focus fullscreen
bindsym --to-code $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Toggle the current focus between tiling and sticky mode
bindsym $mod+Mod1+space sticky toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle

# Move focus to the parent container
bindsym --to-code $mod+a focus parent

#
# Scratchpad:
#
# Move focused window to the scratchpad
bindsym $mod+Shift+minus    move scratchpad

# Show scratchpad window
bindsym $mod+minus          scratchpad show

#
# Fn keybindings
#


# Custom launch shortcut
#bindsym XF86Launch1 exec $browser
#bindsym XF86Launch6 exec something



# Sleep
#bindsym XF86Standby swayidle

# Display
#bindsym XF86Display


# WLAN/Bluetooth
#bindsym XF86WLAN
#bindsym XF86Bluetooth

# TouchPad toggle
bindsym XF86TouchpadToggle input type:touchpad events toggle

# WebCam
#bindsym XF86WebCam exec $webcam

# Calculator
bindsym XF86Calculator exec $calc

# Music Control
bindsym {
    XF86AudioPrev               exec playerctl previous
    XF86AudioNext               exec playerctl next
    Shift+XF86AudioPrev         exec playerctl position 5-
    Shift+XF86AudioNext         exec playerctl position 5+
    XF86AudioPlay               exec playerctl play-pause
    XF86AudioPause              exec playerctl play-pause
    XF86AudioStop               exec playerctl stop
    Shift+XF86AudioRaiseVolume  exec playerctl volume 0.05+
    Shift+XF86AudioLowerVolume  exec playerctl volume 0.05-
}

# PulseAudio Control
bindsym {
    XF86AudioRaiseVolume        exec pamixer --increase 5
    XF86AudioLowerVolume        exec pamixer --decrease 5
    Ctrl+XF86AudioRaiseVolume   exec pamixer --increase 5 --default-source
    Ctrl+XF86AudioLowerVolume   exec pamixer --decrease 5 --default-source
    $mod+XF86AudioLowerVolume   exec pamixer --set-volume 0
    $mod+XF86AudioRaiseVolume   exec pamixer --set-volume 100
    XF86AudioMute               exec pamixer --toggle-mute
    Ctrl+XF86AudioMute          exec pamixer --toggle-mute --default-source
}

# ALSA Volume Control
#bindsym {
#    XF86AudioRaiseVolume exec bash -c "amixer -D pulse sset Master 5%+"
#    XF86AudioLowerVolume exec bash -c "amixer -D pulse sset Master 5%-"
#    XF86AudioMute        exec bash -c "amixer -D pulse sset Master toggle"
#}

# Brightness Control
bindsym {
    XF86MonBrightnessUp     exec brightnessctl set 5%+
    XF86MonBrightnessDown   exec brightnessctl set 5%-
}

#
# Resizing containers:
#
mode "resize" {
    bindsym --to-code {
        $left   resize shrink   width 10px
        $down   resize grow     height 10px
        $up     resize shrink   height 10px
        $right  resize grow     width 10px

        Left    resize shrink   width 10px
        Down    resize grow     height 10px
        Up      resize shrink   height 10px
        Right   resize grow     width 10px
    }

    # Return to default mode
    bindsym {
        Return mode "default"
        Escape mode "default"
    }
}

bindsym --to-code $mod+r mode "resize"

#
# Status Bar:
#
# man 5 sway-bar
bar {
    position        top
    height          20
    tray_output     none
    pango_markup    enabled
    font            $bar_font_family
    strip_workspace_numbers yes
    swaybar_command waybar
#   swaybar_command i3status-rs /usr/share/doc/i3status-rust/examples/example_config.toml
#   colors {
#       separator   #ffffff
#       statusline  #ffffff
#       background  #191919
#       focused_separator   #ffffff
#       focused_statusline  #ffffff
#       focused_background  #323232
#       focused_workspace   #000000
#       active_workspace    #ffffff
#       inactive_workspace  #32323200 #32323200 #5c5c5c
#       urgent_workspace    #000000
#       binding_mode        #ffffff
#   }
}

# Window rules
for_window [app_id="imv"]               floating enable
for_window [app_id="mpv"]               floating enable
for_window [app_id="pavucontrol-qt"]    floating enable
for_window [app_id="firefox(?i)"]       move to workspace 2
for_window [app_id="code"]              move to workspace 3
for_window [app_id="(?i)gramdesktop"]   move to workspace 4
for_window [app_id="discord(?i)"]       move to workspace 5
for_window [app_id="MellowPlayer"]      move to workspace 5

# Window types
for_window [window_role="pop-up"]       floating enable
for_window [window_role="bubble"]       floating enable
for_window [window_role="task_dialog"]  floating enable
for_window [window_role="Preferences"]  floating enable

for_window [window_type="dialog"]       floating enable
for_window [window_type="menu"]         floating enable
# Custom windows
for_window [app_id="^BTconnect$"]       focus, floating enable, resize set width 450 height 300, border normal, opacity 0.95
for_window [app_id="dropdown"]          focus, floating enable, move to scratchpad, scratchpad show, sticky enable, resize set width 700 px height 400 px, move absolute position 350 px 20 px, opacity 0.95, border pixel 3, mark dropdown
for_window [app_id="^launcher$"]        focus, floating enable, resize set width 400 px height 500 px, border none, opacity 0.9
for_window [app_id="htop(?i)"]          focus, floating enable
for_window [app_id="sensors(?i)"]       focus, floating enable, resize set width 530 height 400, border normal
for_window [app_id="firefox(?i)" title="Picture-in-Picture"]    floating enable, sticky enable, mark Firefox Picture-in-Picture
for_window [app_id="firefox(?i)" title="About Mozilla Firefox"] floating enable
for_window [app_id="firefox(?i)" title="Library"]               floating enable
for_window [app_id="engrampa(?i)"]                              floating enable

# Float the buggy Firefox indicator
for_window [title="Firefox - Sharing Indicator"] floating enable
# Float the buggy Chromium indicator
for_window [title=".*is sharing your screen."] floating enable

# The GTK file-choser renders too big on the laptop screen (the windows is bigger than the monitor, so controls are off-screen)
# This picks up all variations of the file picker for firefox, and shrinks it.
# As a bonus, it also grows the window to a larger size if it's too small.
for_window [title="File Upload" floating] resize set width 90 ppt height 90 ppt
for_window [title="Open File" floating] resize set width 90 ppt height 90 ppt
for_window [title="Enter name of file to save to…" floating] resize set width 90 ppt height 90 ppt
for_window [title="Save As" floating] resize set width 90 ppt height 90 ppt
for_window [title="Save Image" floating] resize set width 90 ppt height 90 ppt

# Tag XWayland windows as such
for_window [shell="xwayland"] title_format "<span>[X] %title</span>"

exec systemd-notify --ready || true
